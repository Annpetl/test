name: E2E Tests

on:
  pull_request:
    branches:
        - main
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        required: false
        default: "staging"
        type: choice
        options:
          - staging
      tenant:
        description: "Tenant name"
        required: false
        type: choice
        options:
          - videoland
      customer:
        description: "Customer name"
        required: false
        type: choice
        options:
          - rtlnl
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      tenant:
        required: true
        type: string
      customer:
        required: true
        type: string
      pr_number:
        required: true
        type: string
permissions:
  pull-requests: write
  contents: read

jobs:
  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Set BASE_URL based on environment
        env:
          PR_NUMBER: ${{ inputs.pr_number || 1 }}
        run: |
          if [ -n "$PR_NUMBER" ]; then
            BASE_URL="https://content-discovery-assistant-${{ inputs.customer }}-$PR_NUMBER.preview.${{ inputs.tenant }}.bedrock.tech"
          else
            BASE_URL="https://content-discovery-assistant-${{ inputs.customer }}.staging.${{ inputs.tenant }}.bedrock.tech"
          fi
          echo "BASE_URL=$BASE_URL" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Python version with poetry
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install pipx
          pipx install poetry==1.8.2
          poetry install

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev

      - name: Run E2E tests
        run: |
          poetry run pytest -c tests/e2e_tests.ini ---junitxml=report.xml

      - name: Generate Allure Report (Single HTML)
        run: |
          poetry run allure generate ./allure-results -o ./allure-report --clean
          mkdir -p ./report
          poetry run allure-combine ./allure-report --dest ./report
          mv ./report/complete.html ./allure-single-report.html

      - name: Upload JUnit Report
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: .report.xml

      - name: Parse JUnit report and create summary
        id: summary
        run: |   
          total=$(grep -o '<testcase ' report.xml | wc -l)
          failed=$(grep -o '<failure' report.xml | wc -l)
          skipped=$(grep -o '<skipped' report.xml | wc -l)
          skipped=$(grep -o 'status="skipped"' ./allure-results/*.xml | wc -l)
          passed=$((total - failed - skipped))

          echo "total=$total" >> $GITHUB_OUTPUT
          echo "passed=$passed" >> $GITHUB_OUTPUT
          echo "failed=$failed" >> $GITHUB_OUTPUT
          echo "skipped=$skipped" >> $GITHUB_OUTPUT

      - name: Comment on PR with test summary
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ inputs.pr_number }}
          message: |
            ### ✅ JUnit Test Results

            - **Total tests**: ${{ steps.summary.outputs.total }}
            - ✅ Passed: ${{ steps.summary.outputs.passed }}
            - ❌ Failed: ${{ steps.summary.outputs.failed }}
            - ⚠️ Skipped: ${{ steps.summary.outputs.skipped }}


