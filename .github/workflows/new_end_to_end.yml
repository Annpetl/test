name: E2E Tests

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        required: false
        default: "staging"
        type: choice
        options:
          - staging
      tenant:
        description: "Tenant name"
        required: false
        type: choice
        options:
          - videoland
          -
      customer:
        description: "Customer name"
        required: false
        type: choice
        options:
          - rtlnl
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      tenant:
        required: true
        type: string
      customer:
        required: true
        type: string
      pr_number:
        required: true
        type: string

permissions:
  pull-requests: write
  contents: read

jobs:
  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.env || 'staging' }}

    steps:
      - name: Set BASE_URL based on environment
        env:
          PR_NUMBER: ${{ inputs.pr_number || 1 }}
        run: |
          if [ -n "$PR_NUMBER" ]; then
            BASE_URL="https://content-discovery-assistant-${{ inputs.customer }}-$PR_NUMBER.preview.${{ inputs.tenant }}.bedrock.tech"
          else
            BASE_URL="https://content-discovery-assistant-${{ inputs.customer }}.staging.${{ inputs.tenant }}.bedrock.tech"
          fi
          echo "BASE_URL=$BASE_URL" >> $GITHUB_ENV
          echo "Using BASE_URL: $BASE_URL"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install pipx
          pipx install poetry==1.8.2
          poetry install 

      - name: Run tests and generate JUnit report
        continue-on-error: true
        run: |
          poetry run pytest -c tests/e2e_tests.ini --junitxml=results.xml
          pytest_exit=$?
          echo "PYTEST_EXIT_CODE=$pytest_exit" >> $GITHUB_ENV

      - name: Process test results and post to PR
        uses: npx github-actions-ctrf results.xml --pr-comment --summary
        if: ${{ github.event_name == 'pull_request' }}
        with:
          results: results.xml

      - name: Add test results to workflow summary
        run: |
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          cat results.xml >> $GITHUB_STEP_SUMMARY

      - name: Fail job if tests failed
        if: env.PYTEST_EXIT_CODE != '0'
        run: exit $PYTEST_EXIT_CODE
